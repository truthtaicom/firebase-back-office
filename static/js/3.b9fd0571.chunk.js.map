{"version":3,"sources":["assets/images/sidebar.jpg","components/DrawerLeft/DrawerLeft.js","components/DrawerLeft/index.js","components/AppBarUser/index.js","components/AppBarUser/AppBarUser.js","components/AppBar/AppBar.js","components/AppBar/index.js","components/Auth/withAuthorization.js","layouts/Dashboard.js"],"names":["module","exports","__webpack_require__","p","withStyles","DrawerLeft","theme","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerWrapper","backgroundImage","concat","sidebarImg","top","left","height","zIndex","display","backgroundSize","backgroundPosition","&:after","content","opacity","background","drawerPaperClose","Object","defineProperty","overflowX","leavingScreen","spacing","unit","breakpoints","up","toolbar","paddingRight","toolbarIcon","objectSpread","alignItems","justifyContent","padding","mixins","withTheme","_ref","classes","open","handleDrawerClose","react_default","a","createElement","index_es","variant","paper","cn","className","onClick","ChevronLeft_default","map","text","index","button","key","Inbox_default","Mail_default","primary","AppBarUser","state","anchorEl","handleClick","event","_this","setState","currentTarget","handleClose","this","_this$props","props","username","onLogout","Button_default","aria-owns","undefined","aria-haspopup","core_Menu_default","id","Boolean","onClose","MenuItem_default","React","Component","AppBar","memo","handleDrawerOpen","AppBar_default","color","appBar","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","menuButton","menuButtonHidden","Menu_default","Typography_default","component","noWrap","title","components_AppBarUser","compose","drawer","marginLeft","hide","marginRight","flexGrow","withAuthorization","condition","WithAuthorization","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","listener","Firebase","onAuthUserListener","authUser","history","push","ROUTES","withRouter","connect","authReducer","HomePage","lazyComponent","Dashboard","logoutUser","root","CssBaseline_default","components_AppBar","components_DrawerLeft","drawerHeader","BrowserRouter","Switch","Route","path","exact","mapDispatchToProps","isLogged","overflow"],"mappings":"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","file":"static/js/3.b9fd0571.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sidebar.fc9cb053.jpg\";","import React from 'react';\nimport { Drawer, withStyles, Divider, List, ListItem, ListItemIcon, ListItemText, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport cn from 'classnames'\nimport sidebarImg from '../../assets/images/sidebar.jpg'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    })\n  },\n  drawerWrapper: {\n    backgroundImage: `url(${sidebarImg})`,\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    zIndex: 1,\n    display: 'block',\n    position: 'absolute',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center center',\n    \"&:after\": {\n      width: '100%',\n      height: '100%',\n      zIndex: 3,\n      content: \"\",\n      display: 'block',\n      opacity: .8,\n      position: 'absolute',\n      background: '#000',\n    }\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing.unit * 9,\n    },\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n});\n\nfunction DrawerLeft({ classes, open, theme, handleDrawerClose }) {\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: cn(classes.drawerPaper, !open && classes.drawerPaperClose),\n      }}\n      open={open}\n    >\n      <div className={classes.drawerWrapper}>\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n      \n    </Drawer>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(DrawerLeft);","import DrawerLeft from './DrawerLeft'\n\nexport default DrawerLeft","import AppBarUser from './AppBarUser';\nexport default AppBarUser","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nclass AppBarUser extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const { username, onLogout } = this.props;\n    return (\n      <div>\n        <Button\n          aria-owns={anchorEl ? 'simple-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n        >\n          {username}\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem onClick={this.handleClose}>Profile</MenuItem>\n          <MenuItem onClick={this.handleClose}>My account</MenuItem>\n          <MenuItem onClick={onLogout}>Logout</MenuItem>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default AppBarUser;","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport { withStyles } from '@material-ui/core';\nimport { compose } from 'recompose'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { default as AppBarUI } from '@material-ui/core/AppBar'\nimport AppBarUser from '../AppBarUser';\n\n\nconst drawerWidth = 240;\nconst styles = theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  hide: {\n    display: 'none',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nconst AppBar = memo(({ open, classes, handleDrawerOpen, onLogout, username }) => {\n  return (\n    <AppBarUI\n      color=\"default\"\n      position=\"absolute\"\n      className={cn(classes.appBar, open && classes.appBarShift)}\n    >\n      <Toolbar disableGutters={!open} className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          onClick={handleDrawerOpen}\n          className={cn(\n            classes.menuButton,\n            open && classes.menuButtonHidden,\n          )}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Dashboard\n        </Typography>\n        {/* <IconButton color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton> */}\n\n      <AppBarUser username={username} onLogout={onLogout} />\n      </Toolbar>\n    </AppBarUI>\n  )\n})\n\nexport default compose(\n  withStyles(styles, { withTheme: true })\n)(AppBar);","import AppBar from './AppBar'\nexport default AppBar","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\n\nimport Firebase from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = Firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.LOGIN);\n          }\n        },\n        () => this.props.history.push(ROUTES.LOGIN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return condition(this.props.authUser) ? (\n        <Component {...this.props} />\n      ) : null;\n    }\n  }\n\n  const mapStateToProps = state => ({\n    authUser: state.authReducer.authUser,\n  });\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps),\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React, { lazy } from 'react';\nimport { compose } from 'recompose';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport DrawerLeft from '../components/DrawerLeft';\nimport AppBar from '../components/AppBar';\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../views/Login/Login.Action'\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as ROUTES from '../constants/routes'\nimport lazyComponent from '../components/LazyComponent'\nimport { isLogged } from '../components/Auth'\nimport withAuthorization from '../components/Auth/withAuthorization';\n\nconst HomePage = lazyComponent(\"../views/HomePage\");\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: '100vh',\n    overflow: 'auto',\n  },\n});\n\nclass Dashboard extends React.Component {\n  state = {\n    open: true,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, logoutUser, authUser } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar open={open} handleDrawerOpen={this.handleDrawerOpen} onLogout={logoutUser} username={authUser.username}/>\n        <DrawerLeft open={open} handleDrawerClose={this.handleDrawerClose}/>\n        <main className={classes.content}>\n           <div className={classes.drawerHeader} />\n           <Router>\n             <Switch>\n               <Route path={ROUTES.HOME} exact component={HomePage} />\n             </Switch>\n           </Router>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authUser: state.authReducer.authUser\n})\n\nconst mapDispatchToProps = { logoutUser }\nexport default compose(\n  withAuthorization(isLogged),\n  withStyles(styles, { withTheme: true }),\n  connect(\n    null,\n    mapDispatchToProps,\n  ),\n)(Dashboard);"],"sourceRoot":""}