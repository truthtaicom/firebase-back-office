{"version":3,"sources":["components/Auth/helpers.js","components/Auth/Auth.Reducer.js","components/Auth/index.js","components/Auth/Auth.Action.js","components/Auth/withAuthentication.js","App.js","store.js","serviceWorker.js","index.js","views/Login/Login.ActionType.js","components/Loading/Loading.js","components/LazyComponent/index.js","components/Firebase/Firebase.js","components/Firebase/FirebaseContext.js","components/Firebase/index.js","views/Register/Register.ActionType.js","views/Register/Register.Action.js","views/Register/Register.js","views/Register/Register.Reducer.js","views/Register/index.js","views/Login/Login.js","views/Login/Login.Reducer.js","views/Login/index.js","views/Login/Login.Action.js","constants/routes.js","components/Auth/Auth.ActionTypes.js"],"names":["isLogged","authUser","initState","authReducer","state","arguments","length","undefined","action","type","actionTypes","Object","objectSpread","data","__webpack_require__","d","__webpack_exports__","setAuthUser","dispatch","withAuthentication","Component","WithAuthentication","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","Firebase","onAuthUserListener","setItem","stringify","removeItem","react_default","a","createElement","React","mapDispatchToProps","compose","connect","LoginPage","lazyComponent","Promise","resolve","then","bind","RegisterPage","DashboardPage","all","e","NotFoundPage","BrowserRouter","Switch","Route","path","ROUTES","exact","component","store","createStore","combineReducers","loginReducer","registerReducer","applyMiddleware","thunk","f","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILURE","withStyles","theme","progress","margin","spacing","unit","classes","CircularProgress_default","className","fn","lazy","react","fallback","Loading","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase_Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignInWithTwitter","twitterProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","next","onAuthStateChanged","_ref","asyncToGenerator","regenerator_default","mark","_callee","snapshot","dbUser","wrap","_context","prev","user","uid","once","sent","val","roles","emailVerified","providerData","stop","_x","apply","db","ref","concat","users","message","messages","app","initializeApp","err","test","console","error","stack","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","createContext","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","registerUser","username","_ref$roles","_ref2","userInfo","set","href","t0","RegisterForm","main","defineProperty","width","display","marginLeft","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","backgroundColor","palette","secondary","loading","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","Typography_default","variant","onSubmit","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","actionsType","Register_Action_registerUser","Register","LoginForm","loginUser","Login_Action","Login","_Users_tai_CODE_PERSONAL_firebase_back_office_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_tai_CODE_PERSONAL_firebase_back_office_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","userAuth","logoutUser","_ref3","_callee2","_context2","logoutUserSuccess","logoutUserFailure","_x2","LANDING","REGISTER","LOGIN","HOME","SET_AUTH_USER"],"mappings":"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","file":"static/js/main.04d81da9.chunk.js","sourcesContent":["export const isLogged = authUser => !!authUser","import * as actionTypes from './Auth.ActionTypes'\n\nconst initState = {\n  authUser: null\n}\n\nexport default function authReducer(state = initState, action) {\n  switch (action.type) {\n    case actionTypes.SET_AUTH_USER:\n      return {\n        ...state,\n        authUser: action.data\n      }\n  \n    default:\n      return state\n  }\n}","export { isLogged } from './helpers'\nexport { default as authReducer } from './Auth.Reducer'","import * as actionTypes from './Auth.ActionTypes';\n\n\nexport function setAuthUser(data) {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.SET_AUTH_USER,\n      data\n    })\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { setAuthUser } from './Auth.Action'\nimport Firebase from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.props.setAuthUser(\n        JSON.parse(localStorage.getItem('authUser')),\n      );\n    }\n\n    componentDidMount() {\n      this.listener = Firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.props.setAuthUser(authUser);\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.props.setAuthUser(null);\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return <Component {...this.props} />;\n    }\n  }\n\n  const mapDispatchToProps = {\n    setAuthUser\n  }\n\n  return compose(\n    connect(\n      null,\n      mapDispatchToProps,\n    ),\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;","import React, { lazy } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as ROUTES from './constants/routes'\nimport withAuthentication from './components/Auth/withAuthentication';\nimport lazyComponent from './components/LazyComponent'\n\nconst LoginPage = lazyComponent(()=> import(\"./views/Login\"));\nconst RegisterPage = lazyComponent(()=> import(\"./views/Register\"));\nconst DashboardPage = lazyComponent(()=> import('./layouts/Dashboard'))\nconst NotFoundPage = lazyComponent(()=> import('./views/NotFound'))\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route path={ROUTES.LANDING} exact component={DashboardPage} />\n      <Route path={ROUTES.LOGIN} component={LoginPage} />\n      <Route path={ROUTES.REGISTER} component={RegisterPage} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  </Router>\n)\n\nexport default withAuthentication(App);\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { authReducer } from './components/Auth';\nimport { loginReducer } from './views/Login';\nimport { registerReducer } from './views/Register';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(\n  combineReducers({\n    authReducer,\n    loginReducer,\n    registerReducer\n  }),\n  compose(\n    applyMiddleware(thunk),\n    process.env.NODE_ENV === 'development' &&\n    (window).__REDUX_DEVTOOLS_EXTENSION__\n      ? (window).__REDUX_DEVTOOLS_EXTENSION__()\n      : (f) => f\n  )\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { store } from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const LOGIN_USER_REQUEST = 'LOGIN_USER_REQUEST'\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS'\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE'\n\nexport const LOGOUT_USER_REQUEST = 'LOGOUT_USER_REQUEST'\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS'\nexport const LOGOUT_USER_FAILURE = 'LOGOUT_USER_FAILURE'","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n    <div>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n\nexport default withStyles(styles)(CircularIndeterminate);","import React, { Suspense, lazy } from 'react';\nimport { Loading } from '../Loading';\n\nexport function withLazyComponent(Component) {\n  return props => {\n    return (\n      <Suspense fallback={<Loading />}>\n        <Component {...props} />\n      </Suspense>\n    )\n  };\n}\n\nconst lazyComponent = (fn) => withLazyComponent(lazy(fn))\nexport default lazyComponent","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    try {\n      app.initializeApp(config)\n    } catch (err) {\n      // we skip the \"already exists\" message which is\n      // not an actual error when we're hot-reloading\n      if (!/already exists/.test(err.message)) {\n        console.error('Firebase initialization error', err.stack)\n      }\n    }\n    \n\n    /* Helper */\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    /* Firebase APIs */\n\n    this.auth = app.auth();\n    this.db = app.database();\n\n    /* Social Sign In Method Provider */\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n    this.twitterProvider = new app.auth.TwitterAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignInWithTwitter = () =>\n    this.auth.signInWithPopup(this.twitterProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged( async authUser => {\n      if (authUser) {\n        const snapshot =  await this.user(authUser.uid).once('value')\n        const dbUser = snapshot.val();\n\n        // default empty roles\n        if (!dbUser.roles) {\n          dbUser.roles = [];\n        }\n\n        // merge auth and db user\n        authUser = {\n          uid: authUser.uid,\n          email: authUser.email,\n          emailVerified: authUser.emailVerified,\n          providerData: authUser.providerData,\n          ...dbUser,\n        };\n\n        next(authUser);\n      } else {\n        fallback();\n      }\n    });\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n\n  // *** Message API ***\n\n  message = uid => this.db.ref(`messages/${uid}`);\n\n  messages = () => this.db.ref('messages');\n}\n\nexport default new Firebase();","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import Firebase from './Firebase'\nexport { default as FirebaseContext } from './FirebaseContext'\nexport default Firebase","export const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAILURE = 'REGISTER_USER_FAILURE'\n","import * as actionTypes from './Register.ActionType'\nimport Firebase from '../../components/Firebase';\n\nexport const registerUserRequest = () => ({\n  type: actionTypes.REGISTER_USER_REQUEST\n})\n\nexport const registerUserSuccess = (data) => ({\n  type: actionTypes.REGISTER_USER_SUCCESS,\n  data\n})\n\nexport const registerUserFailure = (error) => ({\n  type: actionTypes.REGISTER_USER_FAILURE,\n  error\n})\n\nexport const registerUser = ({ username, email, password, roles = [] }) => {\n  return async (dispatch) => {\n    dispatch(registerUserRequest())\n    try {\n      const userInfo = await Firebase.doCreateUserWithEmailAndPassword(email, password)\n      await Firebase.user(userInfo.user.uid).set({\n        username,\n        email,\n        roles,\n      });\n\n      // await this.props.firebase.doSendEmailVerification();\n      dispatch(registerUserSuccess(userInfo))\n      window.location.href = '/'\n    } catch(error) {\n      dispatch(registerUserFailure(error))\n    }\n  }\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { registerUser } from './Register.Action'\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\n\nimport lazyComponent from '../../components/LazyComponent';\nconst RegisterForm = lazyComponent(() => import('../../components/RegisterForm'))\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n});\n\nfunction Register(props) {\n  const { classes, registerUser, error, loading } = props;\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <RegisterForm onSubmit={registerUser} error={error} loading={loading} />\n      </Paper>\n\n      {\n        error && error.message &&\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={!!error.message}\n          autoHideDuration={3000}\n          message={error.message}\n        />\n      }\n      \n    </main>\n  );\n}\n\nconst mapStateToProps = state => {\n  return { \n    loading: state.registerReducer.loading,\n    data: state.registerReducer.data,\n    error: state.registerReducer.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  registerUser\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Register);","import * as actionsType from './Register.ActionType'\n\nconst initState = {\n  data: null,\n  loading: false,\n  error: null,\n}\n\nexport default function registerReducer(state = initState, action) {\n  switch (action.type) {\n    case actionsType.REGISTER_USER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    case actionsType.REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.data,\n      }\n    case actionsType.REGISTER_USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}","import Register from './Register';\nexport { default as registerReducer } from './Register.Reducer'\nexport { registerUser } from './Register.Action'\nexport default Register","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { loginUser } from './Login.Action'\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\n\nimport lazyComponent from '../../components/LazyComponent';\nconst LoginForm = lazyComponent(() => import('../../components/LoginForm'))\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n});\n\nfunction Login(props) {\n  const { classes, loginUser, error, loading } = props;\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        <LoginForm onSubmit={loginUser} error={error} loading={loading} />\n      </Paper>\n\n      {\n        error && error.message &&\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={!!error.message}\n          autoHideDuration={1000}\n          message={error.message}\n        />\n      }\n      \n    </main>\n  );\n}\n\nconst mapStateToProps = state => {\n  return { \n    loading: state.loginReducer.loading,\n    data: state.loginReducer.data,\n    error: state.loginReducer.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  loginUser\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(Login);","import * as actionsType from './Login.ActionType'\n\nconst initState = {\n  data: null,\n  loading: false,\n  error: null,\n}\n\nexport default function loginReducer(state = initState, action) {\n  switch (action.type) {\n    case actionsType.LOGIN_USER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n    case actionsType.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.data,\n      }\n    case actionsType.LOGIN_USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n\n      case actionsType.LOGOUT_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      }\n    case actionsType.LOGOUT_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: null,\n      }\n    case actionsType.LOGOUT_USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.error\n      }\n    default:\n      return state\n  }\n}","import Login from './Login';\nexport { default as loginReducer } from './Login.Reducer'\nexport { loginUser, logoutUser } from './Login.Action'\nexport default Login","import * as actionTypes from './Login.ActionType'\nimport Firebase from '../../components/Firebase';\n\nexport const loginUserRequest = () => ({\n  type: actionTypes.LOGIN_USER_REQUEST\n})\n\nexport const loginUserSuccess = (data) => ({\n  type: actionTypes.LOGIN_USER_SUCCESS,\n  data\n})\n\nexport const loginUserFailure = (error) => ({\n  type: actionTypes.LOGIN_USER_FAILURE,\n  error\n})\n\nconst logoutUserRequest = () => ({\n  type: actionTypes.LOGOUT_USER_REQUEST\n})\n\nconst logoutUserSuccess = (data) => ({\n  type: actionTypes.LOGOUT_USER_SUCCESS,\n  data\n})\n\nconst logoutUserFailure = (error) => ({\n  type: actionTypes.LOGOUT_USER_FAILURE,\n  error\n})\n\nexport const loginUser = ({ email, password }) => {\n  return async (dispatch) => {\n    dispatch(loginUserRequest())\n    try {\n      const userAuth = await Firebase.doSignInWithEmailAndPassword(email, password)\n      dispatch(loginUserSuccess(userAuth))\n      window.location.href = '/'\n    } catch(error) {\n      dispatch(loginUserFailure(error))\n    }\n  }\n}\n\nexport const logoutUser = (email, password) => {\n  return async (dispatch) => {\n    dispatch(logoutUserRequest())\n    try {\n      await Firebase.doSignOut()\n      dispatch(logoutUserSuccess())\n    } catch(error) {\n      dispatch(logoutUserFailure())\n    }\n  }\n}","export const LANDING = '/';\nexport const REGISTER = '/register';\nexport const LOGIN = '/login';\nexport const HOME = '/home'\n","export const SET_AUTH_USER = 'SET_AUTH_USER'"],"sourceRoot":""}